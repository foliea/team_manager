@model TeamManager.Models.PlayerModel
@{
    ViewBag.Title = "Create";
}
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Create Player</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Create", "Player", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.ValidationSummary(true)
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="editor-label top-buffer">
                @Html.LabelFor(model => model.Avatar)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AvatarImage, new { type = "file", accept = "image/*" })
                @Html.ValidationMessageFor(model => model.AvatarImage)
            </div>
            <div class="editor-label top-buffer">
                @Html.LabelFor(model => model.Win)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Win, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Win)
            </div>
            <div class="editor-label top-buffer">
                @Html.LabelFor(model => model.Loss)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Loss, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Loss)
            </div>
            <div class="editor-label top-buffer">
                @Html.LabelFor(model => model.Tie)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Tie, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Tie)
            </div>
            <div class="top-buffer">
                <input type="submit" class="btn btn-success" value="Create" />
                @Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-default" })
            </div>
        }
    </div>
</div>